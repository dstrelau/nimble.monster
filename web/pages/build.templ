package pages

import (
	"nimble.monster/internal/nimble"
	"nimble.monster/internal/web"
	"nimble.monster/web/components"
	"strconv"
	"strings"
)

var armors = [][2]string{
	{"none", "Unarmored"},
	{"medium", "Medium"},
	{"heavy", "Heavy"},
}
var sizes = [][2]string{
	{"tiny", "Tiny"},
	{"small", "Small"},
	{"medium", "Medium"},
	{"large", "Large"},
	{"huge", "Huge"},
	{"gargantuan", "Gargantuan"},
}

templ formInputText(label, name, value string, classes []string) {
	<div class={ strings.Join(classes, " ") }>
		<label for="username" class="block text-sm/6 font-medium text-gray-900">{ label }</label>
		<div class="mt-2">
			<input type="text" name={ name } id={ name } value={ value } class="w-full py-1.5 text-gray-900 focus:ring-0 sm:text-sm/6"/>
		</div>
	</div>
}

templ formInputNumber(label, name string, value int, classes []string) {
	<div class={ strings.Join(classes, " ") }>
		<label for="username" class="block text-sm/6 font-medium text-gray-900">{ label }</label>
		<div class="mt-2">
			<input type="number" name={ name } id={ name } value={ strconv.Itoa(value) } class="w-full py-1.5 text-gray-900 focus:ring-0 sm:text-sm/6"/>
		</div>
	</div>
}

templ formSelect(label, name string, choices [][2]string, selected string, classes []string) {
	<div class={ strings.Join(classes, " ") }>
		<label for={ name } class="block text-sm/6 font-medium text-gray-900">{ label }</label>
		<div class="mt-2">
			<select name={ name } id={ name } class="py-1.5 text-gray-900 focus:ring-0 sm:text-sm/6">
				for _, choice := range choices {
					<option value={ choice[0] } selected?={ choice[0] == selected }>{ choice[1] }</option>
				}
			</select>
		</div>
	</div>
}

templ Build(v web.ViewData, m nimble.Monster) {
	<div class="grid grid-cols-6 gap-x-8">
		<div class="col-span-4">
			<form
				if m.ID != "" {
					action={ templ.URL("/my/monsters/" + m.ID) }
				} else {
					action="/build"
				}
				method="post"
				hx-post="/build/preview"
				hx-target="#monster-card"
				hx-trigger="load,change"
			>
				if m.ID != "" {
					<input type="hidden" name="id" value={ m.ID }/>
				}
				<div class="space-y-6">
					<div class="grid grid-cols-5 gap-x-6">
						@formInputText("Name", "name", m.Name, []string{"col-span-3"})
						@formInputText("Lvl", "level", m.Level, []string{"col-span-1"})
						@formSelect("Size", "size", sizes, string(m.Size), []string{"col-span-1"})
					</div>
					<div class="grid grid-cols-6 gap-2">
						@formSelect("Armor", "armor", armors, string(m.Armor), nil)
						@formInputNumber("Swim", "swim", m.Swim, nil)
						@formInputNumber("Fly", "fly", m.Fly, nil)
						@formInputNumber("Speed", "speed", m.Speed, nil)
						@formInputNumber("HP", "hp", m.HP, nil)
					</div>
					<fieldset>
						<div class="header">
							<legend>Abilities</legend>
						</div>
						<div class="grid grid-cols-5 gap-x-6">
							for i := range 3 {
								{{
								ab := nimble.Ability{}
								if i < len(m.Abilities) {
									ab = m.Abilities[i]
								}
								}}
								@formInputText(
									"Name",
									"ability[][name]",
									ab.Name,
									[]string{"col-span-2"},
								)
								@formInputText(
									"Description",
									"ability[][description]",
									ab.Description,
									[]string{"col-span-3"},
								)
							}
						</div>
					</fieldset>
					<fieldset>
						<div class="header">
							<legend>Actions</legend>
						</div>
						<div class="grid grid-cols-5 gap-x-6">
							for i := range 3 {
								{{
								ac := nimble.Action{}
								if i < len(m.Actions) {
									ac = m.Actions[i]
								}
								}}
								@formInputText(
									"Name",
									"action[][name]",
									ac.Name,
									[]string{"col-span-3"},
								)
								@formInputText(
									"Damage",
									"action[][damage]",
									ac.Damage,
									[]string{"col-span-1"},
								)
								@formInputText(
									"Description",
									"action[][description]",
									ac.Description,
									[]string{"col-span-6"},
								)
							}
						</div>
					</fieldset>
				</div>
				<div class="mt-3">
					if v.CurrentUser != nil {
						<button
							type="submit"
							class="rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
						>Save</button>
					} else {
						<a
							href="/login"
							class="rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
						>Login with Discord</a> to Save
					}
				</div>
			</form>
		</div>
		<div id="monster-card" class="col-span-2">
			@components.MonsterCard(nimble.Monster{})
		</div>
	</div>
}
