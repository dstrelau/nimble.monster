// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package sqldb

import (
	"context"

	"github.com/gofrs/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	//
	AddMonsterToCollection(ctx context.Context, monsterID uuid.UUID, collectionID uuid.UUID) error
	CleanExpiredSessions(ctx context.Context) error
	CountMonstersInFamily(ctx context.Context, familyID pgtype.UUID) (int64, error)
	CreateCollection(ctx context.Context, arg CreateCollectionParams) (Collection, error)
	CreateFamily(ctx context.Context, arg CreateFamilyParams) (Family, error)
	CreateLegendaryMonster(ctx context.Context, arg CreateLegendaryMonsterParams) (Monster, error)
	CreateMonster(ctx context.Context, arg CreateMonsterParams) (Monster, error)
	CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error)
	DeleteCollection(ctx context.Context, id uuid.UUID) (Collection, error)
	DeleteFamily(ctx context.Context, id uuid.UUID) error
	DeleteMonster(ctx context.Context, id uuid.UUID) (Monster, error)
	DeleteSession(ctx context.Context, id uuid.UUID) error
	FindFamilies(ctx context.Context, dollar_1 []uuid.UUID) ([]Family, error)
	FindUsers(ctx context.Context, dollar_1 []uuid.UUID) ([]User, error)
	GetCollection(ctx context.Context, id uuid.UUID) (GetCollectionRow, error)
	GetFamily(ctx context.Context, id uuid.UUID) (GetFamilyRow, error)
	GetMonster(ctx context.Context, id uuid.UUID) (Monster, error)
	GetSession(ctx context.Context, id uuid.UUID) (Session, error)
	GetUser(ctx context.Context, id uuid.UUID) (User, error)
	GetUserByUnexpiredSession(ctx context.Context, id uuid.UUID) (User, error)
	ListCollections(ctx context.Context, userID uuid.UUID) ([]ListCollectionsRow, error)
	ListFamiliesForUser(ctx context.Context, userID uuid.UUID) ([]ListFamiliesForUserRow, error)
	ListMonstersForUser(ctx context.Context, userID uuid.UUID) ([]Monster, error)
	ListMonstersInCollection(ctx context.Context, collectionID uuid.UUID) ([]Monster, error)
	ListPublicCollections(ctx context.Context) ([]ListPublicCollectionsRow, error)
	ListPublicFamilies(ctx context.Context) ([]ListPublicFamiliesRow, error)
	ListPublicMonsters(ctx context.Context) ([]Monster, error)
	//
	RemoveMonsterFromCollection(ctx context.Context, monsterID uuid.UUID, collectionID uuid.UUID) error
	SearchMonsters(ctx context.Context, lower string) ([]Monster, error)
	UpdateCollection(ctx context.Context, arg UpdateCollectionParams) (Collection, error)
	UpdateFamily(ctx context.Context, arg UpdateFamilyParams) (Family, error)
	UpdateLegendaryMonster(ctx context.Context, arg UpdateLegendaryMonsterParams) (Monster, error)
	UpdateMonster(ctx context.Context, arg UpdateMonsterParams) (Monster, error)
	UpsertUser(ctx context.Context, arg UpsertUserParams) (User, error)
}

var _ Querier = (*Queries)(nil)
